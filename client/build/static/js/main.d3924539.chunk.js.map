{"version":3,"sources":["compare-artists.js","components/Map.js","components/user_top_cities.csv","App.js","reportWebVitals.js","index.js"],"names":["module","exports","findCities","user","places","artists","items","genreObjForUser","Object","i","length","genreListForArtist","genres","posValue","genre","String","sortUserGenreObject","fromEntries","entries","sort","genreSortedListForUser","unshift","genreCities","cities","specificCity","push","city","country","cityMatches","isCityAMatch","userGenre","cityGenre","leastSquaresList","matchedCityNumber","cityScore","cityGenrePos","userGenrePos","Math","pow","cityScoreObject","cityNumber","score","a","b","topCitiesList","matchingCountries","lowestCityNumber","returnList","Map","cityLocations","lat_lan","useState","city1","city2","city3","city4","city5","center","rel","href","integrity","crossorigin","MapContainer","zoom","scrollWheelZoom","style","height","padding","marginTop","TileLayer","attribution","url","Marker","position","Popup","spotifyApi","SpotifyWebApi","require","App","token","getHashParams","access_token","setAccessToken","state","loggedIn","displayName","profilePic","topGenre","topCity","allCities","getUserInfo","console","log","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getMe","then","data","setState","display_name","images","getMyTopArtists","time_range","limit","className","this","src","onClick","getGenreInfo","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3924539.chunk.js","sourcesContent":["//const fs = require('fs');\r\n\r\nvar findCities = function findCities(user, places) {\r\n\r\n  //let obj = JSON.parse(user);\r\n  let artists = user.items;\r\n\r\n  let genreObjForUser = Object();\r\n\r\n  for (let i = 0; i < artists.length; i++) {\r\n    let genreListForArtist = artists[i].genres;\r\n    let posValue = artists.length-i;\r\n    for(let i = 0; i < genreListForArtist.length; i++){\r\n      let genre = String(genreListForArtist[i]);\r\n      if(genreObjForUser[genre]){\r\n        genreObjForUser[genre] +=posValue;\r\n      }\r\n      else{\r\n        genreObjForUser[genre] = posValue;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // https://stackoverflow.com/questions/1069666/sorting-object-property-by-values/16794116#16794116\r\n  const sortUserGenreObject = Object.fromEntries(\r\n    Object.entries(genreObjForUser).sort(([,a],[,b]) => a-b)\r\n  );\r\n\r\n  let genreSortedListForUser = [];\r\n  for (let genre in sortUserGenreObject){\r\n    genreSortedListForUser.unshift(genre);\r\n  }\r\n  // console.log(genreSortedListForUser);\r\n\r\n  //import cities from json\r\n  // https://www.reddit.com/r/node/comments/2x066w/is_there_an_easy_synchronous_way_to_read_csv/\r\n  let genreCities = [];\r\n\r\n  //let placesObj = JSON.parse(places);\r\n  let cities = places.items;\r\n    \r\n  for (let i = 0; i < cities.length; i++) {\r\n    let specificCity = [];\r\n    specificCity.push(cities[i].city);\r\n    specificCity.push(cities[i].country);\r\n    specificCity.push(cities[i].genres);\r\n    genreCities.push(specificCity);\r\n  }\r\n\r\n  let cityMatches = [];\r\n  // look through each city\r\n  for(let city = 0; city < genreCities.length; city++) {\r\n    let isCityAMatch = 0;\r\n    for(let userGenre = 0; userGenre < genreSortedListForUser.length; userGenre++){\r\n      if(isCityAMatch > 5){\r\n        cityMatches.push(city);\r\n        break;\r\n      }\r\n      // start at 2 bc city, country, genre, ...)\r\n      for(let cityGenre = 2; cityGenre < genreCities[city][2].length; cityGenre++){\r\n        if(genreCities[city][2][cityGenre] === genreSortedListForUser[userGenre]){\r\n          isCityAMatch += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // time for least squares\r\n  let leastSquaresList = [];\r\n  for(let city = 0; city < cityMatches.length; city++) {\r\n    let matchedCityNumber = cityMatches[city];\r\n    let cityScore = 0;\r\n\r\n    for(let cityGenre = 2; cityGenre < genreCities[matchedCityNumber].length-1; cityGenre++){\r\n      let cityGenrePos = cityGenre-2;\r\n      for(let userGenrePos = 0; userGenrePos < genreSortedListForUser.length; userGenrePos++){\r\n        if(genreCities[matchedCityNumber][cityGenre] === genreSortedListForUser[userGenrePos]){\r\n          let differenceSquared = Math.pow(cityGenrePos - userGenrePos,2);\r\n\r\n          cityScore += differenceSquared;\r\n        }\r\n      }\r\n    }\r\n    let cityScoreObject = {\r\n      cityNumber: matchedCityNumber,\r\n      score: cityScore\r\n    }\r\n    leastSquaresList.push(cityScoreObject)\r\n  }\r\n\r\n  leastSquaresList.sort(function(a, b){return a.score - b.score});\r\n\r\n  let topCitiesList = [];\r\n  let matchingCountries = [];\r\n\r\n  let lowestCityNumber = 0;\r\n  if(leastSquaresList.length > 5){\r\n    lowestCityNumber = leastSquaresList.length-5\r\n  }\r\n  for(let city = lowestCityNumber; city < leastSquaresList.length; city++) {\r\n    let matchedCityNumber = leastSquaresList[city][\"cityNumber\"];\r\n    topCitiesList.push(genreCities[matchedCityNumber][0]);\r\n    matchingCountries.push(genreCities[matchedCityNumber][1])\r\n  }\r\n//prints in 5,4,3,2,1 order\r\n\r\n  let returnList = [];\r\n  returnList.push(topCitiesList);\r\n  returnList.push(matchingCountries);\r\n\r\n  return returnList;\r\n}\r\n\r\n//let user = fs.readFileSync('./user.json');\r\n//let places = fs.readFileSync('./places.json');\r\n\r\n//findCities(user, places);\r\n\r\nmodule.exports.findCities = findCities;","import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport React, {useState} from \"react\"\r\n\r\n\r\nfunction Map({cityLocations, lat_lan}) {\r\n  // setup\r\n  const[city1, setCity1] = useState([50,1]);\r\n  const[city2, setCity2] = useState([50,1.25]);\r\n  const[city3, setCity3] = useState([50,1.5]);\r\n  const[city4, setCity4] = useState([50,1.75]);\r\n  const[city5, setCity5] = useState([50,2]);\r\n  const[center, setCenter] = useState([0,0]);\r\n\r\n  return (\r\n    <div >\r\n       <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\r\n       integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\r\n       crossorigin=\"\"/>\r\n        <MapContainer \r\n            center={center}\r\n            zoom={3}\r\n            scrollWheelZoom={false}\r\n            style={{\r\n              height: '300px',\r\n              padding: \"100px\",\r\n              marginTop: '50px',\r\n              }}> \r\n              <TileLayer\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              />\r\n                <Marker position={city1}>\r\n                  <Popup>\r\n                    A pretty CSS3 popup. <br /> Easily customizable.\r\n                  </Popup>\r\n                </Marker>\r\n\r\n                <Marker position={city2}>\r\n                  <Popup>\r\n                    A pretty CSS3 popup. <br /> Easily customizable.\r\n                  </Popup>\r\n                </Marker>\r\n\r\n                <Marker position={city3}>\r\n                  <Popup>\r\n                    A pretty CSS3 popup. <br /> Easily customizable.\r\n                  </Popup>\r\n                </Marker>\r\n\r\n                <Marker position={city4}>\r\n                  <Popup>\r\n                    A pretty CSS3 popup. <br /> Easily customizable.\r\n                  </Popup>\r\n                </Marker>\r\n\r\n                <Marker position={city5}>\r\n                  <Popup>\r\n                    A pretty CSS3 popup. <br /> Easily customizable.\r\n                  </Popup>\r\n                </Marker>\r\n          </MapContainer>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Map;\r\n","export default __webpack_public_path__ + \"static/media/user_top_cities.1b3c8ea8.csv\";","import React, { Component} from 'react';\r\nimport Map from './components/Map.js'\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport cities from './places.json';\r\n\r\n//import './components/UserGenresTemplate.js';\r\nimport UserGenreList from './components/UserGenresTemplate';\r\n\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\nvar findCities = require('./compare-artists');\r\n\r\nconst LOGIN_URI =\r\nprocess.env.NODE_ENV !== 'production'\r\n? 'http://localhost:8888/login'\r\n: 'https://where-do-you-vibe.herokuapp.com/login';\r\n\r\nclass App extends Component {\r\n  constructor(){ //This reads the token from the url, token allows us access to user info\r\n    super();\r\n    const params = this.getHashParams();\r\n    const token = params.access_token;\r\n    if (token) {\r\n      spotifyApi.setAccessToken(token);\r\n    }\r\n    this.state = { //sets state, allows us to know if someone is logged in and their name\r\n      loggedIn: token ? true : false,\r\n      user: {displayName:'not logged in', profilePic:''},\r\n      topGenre: {},\r\n      topCity: 'No top matches generated yet',\r\n      allCities: cities,\r\n    }\r\n    var c = this.state.loggedIn ? this.getUserInfo() : \"\";\r\n  console.log(this.state.topCity)\r\n  };\r\n\r\n \r\n  getHashParams(){\r\n    var hashParams = {};\r\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n    e = r.exec(q)\r\n    while (e) {\r\n       hashParams[e[1]] = decodeURIComponent(e[2]);\r\n       e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  };\r\n\r\n  getUserInfo(){ //call to get user infomation from spotify api\r\n      spotifyApi.getMe()\r\n      .then((data) => {\r\n        this.setState({\r\n          user: { \r\n              displayName: data.display_name, \r\n              profilePic: data.images[0].url\r\n            }\r\n        });\r\n      });  \r\n  };\r\n\r\n  \r\ngetGenreInfo(){\r\n  spotifyApi.getMyTopArtists({time_range: 'medium_term', limit: 20})\r\n  .then((data)=>{\r\n     this.setState({\r\n       topGenre: data,\r\n       topCity: findCities.findCities(data, this.state.allCities),\r\n    });     \r\n   });\r\n\r\n}\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <a href={LOGIN_URI}> Login to Spotify </a>\r\n        <div>\r\n          Hello { this.state.user.displayName }\r\n        </div>\r\n        <div>\r\n          <img src={this.state.user.profilePic} style={{ height: 150 }}/>\r\n        </div>\r\n        \r\n      { this.state.loggedIn &&\r\n        <button onClick={() => this.getGenreInfo()}>\r\n         Get your genres\r\n        </button>\r\n      }\r\n      <div>\r\n        {this.state.topCity}\r\n      </div>\r\n\r\n        <div>\r\n        <Map cityLocations = {\"\"} lat_lan={\"\"}/>\r\n        </div>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}